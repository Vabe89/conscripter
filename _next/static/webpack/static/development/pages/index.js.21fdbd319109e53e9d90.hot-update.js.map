{"version":3,"file":"static/webpack/static/development/pages/index.js.21fdbd319109e53e9d90.hot-update.js","sources":["webpack:///./state/reducers/fonts/index.js"],"sourcesContent":["import { FETCH_FONTS, ADD_SUBSTITUTION, REMOVE_SUBSTITUTION, DOWNLOAD, SET_FONTNAME, SWAP_SUBSTITUTION, SAVE, LOAD } from '../../actionTypes'\nimport { STATUS_PENDING, STATUS_OK, STATUS_ERROR } from '../../status'\n\nimport { assembleDataUri, download } from './assembleDataUri'\n\nconst defaultState = {\n  status: STATUS_PENDING,\n  buffer: null,\n  datauri: null,\n  substitutions: [],\n  fontname: 'My Custom Font'\n}\n\nexport function reassembleDataUri(assembleDataUri, reducer) {\n  return (state, action) => {\n    const newstate = reducer(state, action)\n\n    const needToRebuildDataUri = !!newstate && !!newstate.buffer && !!newstate.substitutions.length && (\n      !state ||\n      state.buffer !== newstate.buffer ||\n      state.substitutions !== newstate.substitutions ||\n      state.fontname !== newstate.fontname\n    )\n\n    if (needToRebuildDataUri) {\n      const { buffer, substitutions, fontname } = newstate\n      return {\n        ...newstate,\n        ...assembleDataUri(buffer, substitutions, fontname)\n      }\n    }\n\n    return newstate\n  }\n}\n\nexport const fonts = reassembleDataUri(assembleDataUri, (state = defaultState, action) => {\n  if (action && action.type === FETCH_FONTS) {\n    switch (action.status) {\n      case STATUS_OK:\n        return {\n          ...state,\n          status: STATUS_OK,\n          buffer: action.buffer\n        }\n      case STATUS_ERROR:\n        return {\n          ...state,\n          status: STATUS_ERROR,\n          buffer: null,\n          datauri: null\n        }\n      default:\n        return {\n          ...state,\n          status: STATUS_PENDING,\n          buffer: null,\n          datauri: null\n        }\n    }\n  }\n\n  if (action && action.type === ADD_SUBSTITUTION) {\n    const { substitutions } = state\n    const idx = substitutions.indexOf(action.replace)\n    let newsubs\n    if (idx >= 0) {\n      newsubs = [...substitutions.slice(0, idx), action.substitution, ...substitutions.slice(idx + 1)]\n    } else {\n      newsubs = [...substitutions, action.substitution]\n    }\n    return {\n      ...state,\n      substitutions: newsubs\n    }\n  }\n\n  if (action && action.type === REMOVE_SUBSTITUTION) {\n    const { substitutions } = state\n    const idx = substitutions.indexOf(action.substitution)\n    let newsubs = substitutions\n    if (idx >= 0) {\n      newsubs = [...substitutions.slice(0, idx), ...substitutions.slice(idx + 1)]\n    }\n\n    return {\n      ...state,\n      substitutions: newsubs\n    }\n  }\n\n  if (action && action.type === DOWNLOAD) {\n    const { buffer, substitutions, fontname } = state\n    download(buffer, substitutions, fontname)\n    return state\n  }\n\n  if (action && action.type === SET_FONTNAME) {\n    return {\n      ...state,\n      fontname: action.value\n    }\n  }\n\n  if (action && action.type === SWAP_SUBSTITUTION) {\n    const { substitutions } = state\n    const newsubs = substitutions.slice()\n    const a = newsubs[action.a]\n    const b = newsubs[action.b]\n    newsubs[action.a] = b\n    newsubs[action.b] = a\n    return {\n      ...state,\n      substitutions: newsubs\n    }\n  }\n\n  if (action && action.type === LOAD) {\n    const { substitutions, fontname, error } = action\n    return {\n      ...state,\n      error,\n      substitutions,\n      fontname,\n    }\n  }\n\n  return state\n})"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAJA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAJA;AAfA;AAsBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;;;;A","sourceRoot":""}