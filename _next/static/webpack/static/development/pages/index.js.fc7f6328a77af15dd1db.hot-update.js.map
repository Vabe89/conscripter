{"version":3,"file":"static/webpack/static/development/pages/index.js.fc7f6328a77af15dd1db.hot-update.js","sources":["webpack:///./components/preview.js","webpack:///./components/slider.js"],"sourcesContent":["import css from './preview.scss'\nimport * as cx from 'classnames'\nimport Input from './input';\nimport Options from './options';\nimport Slider from './slider';\n\nexport default class Preview extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fontSize: 200,\n      options: {\n        italic: false,\n        bold: false,\n        invert: false\n      }\n    }\n\n    this.setFontSize = ({ currentTarget: { value }}) => this.setState({ fontSize: value })\n    this.setOptions = options => this.setState({ options })\n    this.format = v => {\n      return ((v / 100) * 16).toFixed(1) + ' pt'\n    }\n  }\n  render() {\n    const {\n      defaultValue\n    } = this.props\n    const {\n      fontSize,\n      options\n    } = this.state\n    return (\n      <div className={cx(css.background, { [css.inverted]: options.invert })}>\n        <div className={css.container}>\n          <Slider\n            label='Font Size'\n          />\n          <Input label='Font Size' type='range' min={100} max={300} format={this.format} value={fontSize} onChange={this.setFontSize}/>\n          <Options label='Font Options' value={options} onChange={this.setOptions}/>\n          <textarea\n            className={css.previewText}\n            style={{\n              fontSize: (fontSize / 100) + 'em',\n              fontStyle: options.italic ? 'italic': 'initial',\n              fontWeight: options.bold ? 'bold' : 'normal'\n            }}\n            defaultValue={defaultValue}\n          />\n        </div>\n      </div>\n    )\n  }\n}","import Label from \"./label\";\nimport Typography from \"./typography\";\n\nexport default class Slider extends React.PureComponent {\n  render() {\n    const {\n      label,\n      value\n    } = this.props\n    return (\n      <div>\n        <Label>\n          {label}\n          <Typography.Small>{value}</Typography.Small>\n        </Label>\n      </div>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhBA;AAgBA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;AA9CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAdA;AACA;;;;;A","sourceRoot":""}