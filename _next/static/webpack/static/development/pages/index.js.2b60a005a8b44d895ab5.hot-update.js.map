{"version":3,"file":"static/webpack/static/development/pages/index.js.2b60a005a8b44d895ab5.hot-update.js","sources":["webpack:///./components/preview.js"],"sourcesContent":["import css from './preview.scss'\nimport * as cx from 'classnames'\nimport Print from './print.scss'\nimport Text from './text'\nimport Options from './options';\nimport Slider from './slider';\nimport Typography from './typography';\n\nexport default class Preview extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      fontSize: 200,\n      options: {\n        italic: false,\n        bold: false,\n        invert: false,\n        rtl: false\n      }\n    }\n\n    this.setFontSize = (fontSize) => this.setState({ fontSize })\n    this.setOptions = options => this.setState({ options })\n    this.format = v => {\n      return ((v / 100) * 16).toFixed(1) + ' pt'\n    }\n  }\n  render() {\n    const {\n      defaultValue\n    } = this.props\n    const {\n      fontSize,\n      options\n    } = this.state\n    return (\n      <div className={cx(css.background, { [css.inverted]: options.invert })}>\n        <div className={cx(css.formcontainer, Print.none)}>\n          <Slider\n            label='Font Size'\n            min={100}\n            value={fontSize}\n            max={300}\n            onChange={this.setFontSize}\n            format={this.format}\n          />\n          <Options\n            label='Font Options'\n            value={options}\n            optionLabels={{ rtl: 'right-to-left'}}\n            onChange={this.setOptions}\n          />\n        </div>\n        <Text.Area\n          className={cx(css.previewText, Typography.Demofont)}\n          style={{\n            fontSize: (fontSize / 100) + 'em',\n            fontStyle: options.italic ? 'italic': 'initial',\n            fontWeight: options.bold ? 'bold' : 'normal'\n          }}\n          defaultValue={defaultValue}\n        />\n      </div>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAjBA;AAiBA;AACA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;AAxDA;AACA;;;;;A","sourceRoot":""}