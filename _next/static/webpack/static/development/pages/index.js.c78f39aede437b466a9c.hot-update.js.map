{"version":3,"file":"static/webpack/static/development/pages/index.js.c78f39aede437b466a9c.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import css from './index.scss'\nimport { createStore, actions } from '../state'\nimport { connect, Provider } from 'react-redux'\nimport SubstitutionEditor from '../components/substitution-editor'\nimport GlyphGrid from '../components/glyph-grid'\nimport Preview from '../components/preview';\nimport Button, { ButtonBar } from '../components/button';\nimport GithubCorner from '../components/github-corner'\nimport Description from '../components/description';\nimport Header from '../components/header';\nimport Head from '../components/head';\nimport Footer from '../components/footer';\nimport Typography from '../components/typography';\nimport Text from '../components/text';\n\nconst store = createStore()\n\nconst PreviewPlaceholder = `the quick brown fox jumps over the lazy red dog\n\n123456789`\n\nconst FontStyle = connect(\n  state => ({ data: state.fonts.datauri })\n)(function ({ data }) {\n  if (!data) return null\n  return (\n    <style id='test' dangerouslySetInnerHTML={{__html:'@font-face { font-family: demofont; src: url(\\'' + data + '\\')}'}}></style>\n  )\n})\n\nconst ConnectedGlyphGrid = connect(\n  state => ({ ...state.fonts, ...state.substitution }),\n  dispatch => ({\n    onSubstitutionSelect: (substitution) => dispatch(actions.selectSubstitution(substitution)),\n    onSubstitutionSwap: (a, b) => dispatch(actions.swapSubstitution(a, b))\n  })\n)(GlyphGrid)\n\nconst ConnectedSubstitutionEditor = connect(\n  state => {\n    const {\n      fonts,\n      substitution\n    } = state\n\n    const idx = fonts.substitutions.indexOf(substitution.active)\n    const canRemove = idx >= 0\n    const canMoveLeft = idx > 0\n    const canMoveRight = idx < fonts.substitutions.length - 1 && idx >= 0\n    \n    return ({\n      ...fonts,\n      ...substitution,\n      idx,\n      canRemove,\n      canMoveLeft,\n      canMoveRight\n    })\n  },\n  (dispatch) => ({\n    onUpload: ({ contents }) => dispatch(actions.updateSubstitutionGlyph(store.getState().fonts.meta, contents)),\n    onReplaceChange: (value) => dispatch(actions.updateSubstitutionReplace(value)),\n    onAdvanceWidthChange: (value) => dispatch(actions.updateSubstitutionAdvanceWidth(value)),\n    onRemove: () => dispatch(actions.removeSubstitution(store.getState().substitution)),\n    onSubmit: () => dispatch(actions.submitSubstitution(store.getState().substitution)),\n    onCancel: () => dispatch(actions.cancelSubstitution()),\n    onSwap: (a, b) => dispatch(actions.swapSubstitution(a, b))\n  })\n)(SubstitutionEditor)\n\n\nconst ConnectedTopActionSet = connect(\n  state => ({ loadError: state.fonts.error }),\n  dispatch => ({\n    onDownload: () => dispatch(actions.download()),\n    onSave: () => dispatch(actions.save(store.getState())),\n    onLoad: () => dispatch(actions.load())\n  })\n)(function ({\n  loadError,\n  onDownload,\n  onSave,\n  onLoad\n}) {\n  return (\n    <div>\n      <ButtonBar>\n        <Button variant='success' onClick={onDownload}>Download</Button>\n        <Button title='Save to File' variant='default' onClick={onSave}>Save</Button>\n        <Button title='Load from File' variant='default' onClick={onLoad}>Load</Button>\n      </ButtonBar>\n      {loadError && (\n        <Description variant='danger'>{loadError.message}</Description>\n      )}\n    </div>\n  )\n})\n\nconst ConnectedFontName = connect(\n  state => ({ value: state.fonts.fontname }),\n  dispatch => ({\n    onChange: (value) => dispatch(actions.setFontName(value))\n  })\n)(Text.Field)\n\nconst ConnectedHelmet = connect(\n  state => ({\n    title: state.fonts.fontname\n  })\n)(Head)\n\nexport default class Index extends React.Component {\n  componentDidMount() {\n    store.dispatch(actions.fetchFonts())\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <div className={css.root}>\n          <ConnectedHelmet/>\n          <GithubCorner url='https://github.com/dougrich/conscripter'/>\n          <FontStyle />\n          <Header/>\n          <div className={css.container} role=\"main\">\n            <div className={css.topaction}>\n              <ConnectedTopActionSet/>\n              <ConnectedFontName label='Font Name' placeholder='Display name for your font'/>\n            </div>\n            <div className={css.workspace}>\n              <div className={css.panel}>\n                <div className={css.internalpanel}>\n                  <Typography.Header.Section>Substitutions</Typography.Header.Section>\n                  <ConnectedGlyphGrid>\n                    <ConnectedSubstitutionEditor/>\n                  </ConnectedGlyphGrid>\n                </div>\n              </div>\n              <div className={css.panel}>\n              <Typography.Header.Section>Preview</Typography.Header.Section>\n                <Preview defaultValue={PreviewPlaceholder}/>\n              </div>\n            </div>\n          </div>\n          <Footer/>\n        </div>\n      </Provider>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAMA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAPA;AAAA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAKA;AACA;AACA;AADA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AArCA;AACA;;;;;A","sourceRoot":""}