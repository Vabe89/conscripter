{"version":3,"file":"static/webpack/static/development/pages/about.js.d4bf09640fdb2ba0d356.hot-update.js","sources":["webpack:///./components/footer.js","webpack:///./components/header.js","webpack:///./components/links.js"],"sourcesContent":["import css from './footer.scss'\nimport Links from './links'\n\nexport default function Footer() {\n  return (\n    <footer role=\"contentinfo\" className={css.footer}>\n      <div className={css.container}>\n        <div className={css.copyright}>\n          Made by Douglas Richardson Â© 2019.<br/>Fonts available through the <a href=\"https://creativecommons.org/share-your-work/public-domain/cc0/\" target=\"_blank\">Creative Commons CC0 License</a>.<br/>Source code available through the MIT License in the Github Repo.\n        </div>\n        <div>\n            <Links.Home/>\n            <Links.About/>\n            <Links.Privacy/>\n            <Links.Changelog/>\n        </div>\n      </div>\n    </footer>\n  )\n}","import Link from 'next/link'\nimport x from '../pages/index.scss' // this is done to avoid a nasty ordering issue in mini-css-extract\nimport css from './header.scss'\nimport Links from './links'\nconst { version } = require('../package.json')\n\nexport default function Header({\n\n}) {\n  return (\n    <header role=\"banner\">\n      <div className={css.container}>\n        <Links.Home variant='header'/>\n        <div className={css.links} role=\"navigation\">\n          <Links.About/>\n          <Links.Privacy/>\n          <Links.Changelog variant='versioned'/>\n        </div>\n      </div>\n    </header>\n  )\n}","import Link from 'next/link'\nconst { version } = require('../package.json')\nimport * as assert from 'assert'\n\nfunction href(route) {\n  if (route[0] === '/') {\n    return {\n      href: route,\n      as: BASE_LINK + route\n    }\n  } else {\n    return {\n      href: route\n    }\n  }\n}\n\nconst defaultVariant = 'default'\nfunction variant(cases) {\n  return (props) => {\n    const { variant } = props\n    const component = cases[variant || defaultVariant]\n    assert(!!component, 'Undefined variant: ' + variant)\n    return component(props)\n  }\n}\n\nfunction AnchorLink({\n  route,\n  children\n}) {\n  return (\n    <Link {...href(route)}><a>{children}</a></Link>\n  )\n}\n\nconst Home = variant({\n  [defaultVariant]: () => (\n    <AnchorLink route='/'>App</AnchorLink>\n  ),\n  'header': () => (\n    <AnchorLink route='/'><h1>Conscripter</h1></AnchorLink>\n  )\n})\n\nconst About = () => (<AnchorLink route='/about'>About</AnchorLink>)\nconst Privacy = () => (<AnchorLink route='/privacy'>Privacy</AnchorLink>)\nconst Changelog = variant({\n  [defaultVariant]: () => (<AnchorLink route='https://github.com/dougrich/conscripter/blob/master/CHANGELOG.md'>Changelog</AnchorLink>),\n  'versioned': () => (<AnchorLink route='https://github.com/dougrich/conscripter/blob/master/CHANGELOG.md'>New in {version}</AnchorLink>)\n})\n\nexport default {\n  Home,\n  About,\n  Privacy,\n  Changelog\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;;;;A","sourceRoot":""}